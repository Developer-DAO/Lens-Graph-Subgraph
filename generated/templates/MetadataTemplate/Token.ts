// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BaseInitialized extends ethereum.Event {
  get params(): BaseInitialized__Params {
    return new BaseInitialized__Params(this);
  }
}

export class BaseInitialized__Params {
  _event: BaseInitialized;

  constructor(event: BaseInitialized) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollectModuleWhitelisted extends ethereum.Event {
  get params(): CollectModuleWhitelisted__Params {
    return new CollectModuleWhitelisted__Params(this);
  }
}

export class CollectModuleWhitelisted__Params {
  _event: CollectModuleWhitelisted;

  constructor(event: CollectModuleWhitelisted) {
    this._event = event;
  }

  get collectModule(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollectNFTDeployed extends ethereum.Event {
  get params(): CollectNFTDeployed__Params {
    return new CollectNFTDeployed__Params(this);
  }
}

export class CollectNFTDeployed__Params {
  _event: CollectNFTDeployed;

  constructor(event: CollectNFTDeployed) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collectNFT(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CollectNFTInitialized extends ethereum.Event {
  get params(): CollectNFTInitialized__Params {
    return new CollectNFTInitialized__Params(this);
  }
}

export class CollectNFTInitialized__Params {
  _event: CollectNFTInitialized;

  constructor(event: CollectNFTInitialized) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollectNFTTransferred extends ethereum.Event {
  get params(): CollectNFTTransferred__Params {
    return new CollectNFTTransferred__Params(this);
  }
}

export class CollectNFTTransferred__Params {
  _event: CollectNFTTransferred;

  constructor(event: CollectNFTTransferred) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collectNFTId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class DefaultProfileSet extends ethereum.Event {
  get params(): DefaultProfileSet__Params {
    return new DefaultProfileSet__Params(this);
  }
}

export class DefaultProfileSet__Params {
  _event: DefaultProfileSet;

  constructor(event: DefaultProfileSet) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FollowNFTTransferred extends ethereum.Event {
  get params(): FollowNFTTransferred__Params {
    return new FollowNFTTransferred__Params(this);
  }
}

export class FollowNFTTransferred__Params {
  _event: FollowNFTTransferred;

  constructor(event: FollowNFTTransferred) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followNFTId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Collected extends ethereum.Event {
  get params(): Collected__Params {
    return new Collected__Params(this);
  }
}

export class Collected__Params {
  _event: Collected;

  constructor(event: Collected) {
    this._event = event;
  }

  get collector(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get rootProfileId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get rootPubId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CommentCreated extends ethereum.Event {
  get params(): CommentCreated__Params {
    return new CommentCreated__Params(this);
  }
}

export class CommentCreated__Params {
  _event: CommentCreated;

  constructor(event: CommentCreated) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get contentURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get profileIdPointed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get referenceModuleData(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get collectModule(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get collectModuleReturnData(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get referenceModule(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get referenceModuleReturnData(): Bytes {
    return this._event.parameters[9].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class DispatcherSet extends ethereum.Event {
  get params(): DispatcherSet__Params {
    return new DispatcherSet__Params(this);
  }
}

export class DispatcherSet__Params {
  _event: DispatcherSet;

  constructor(event: DispatcherSet) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get dispatcher(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EmergencyAdminSet extends ethereum.Event {
  get params(): EmergencyAdminSet__Params {
    return new EmergencyAdminSet__Params(this);
  }
}

export class EmergencyAdminSet__Params {
  _event: EmergencyAdminSet;

  constructor(event: EmergencyAdminSet) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldEmergencyAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newEmergencyAdmin(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FeeModuleBaseConstructed extends ethereum.Event {
  get params(): FeeModuleBaseConstructed__Params {
    return new FeeModuleBaseConstructed__Params(this);
  }
}

export class FeeModuleBaseConstructed__Params {
  _event: FeeModuleBaseConstructed;

  constructor(event: FeeModuleBaseConstructed) {
    this._event = event;
  }

  get moduleGlobals(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FollowModuleSet extends ethereum.Event {
  get params(): FollowModuleSet__Params {
    return new FollowModuleSet__Params(this);
  }
}

export class FollowModuleSet__Params {
  _event: FollowModuleSet;

  constructor(event: FollowModuleSet) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followModule(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get followModuleReturnData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FollowModuleWhitelisted extends ethereum.Event {
  get params(): FollowModuleWhitelisted__Params {
    return new FollowModuleWhitelisted__Params(this);
  }
}

export class FollowModuleWhitelisted__Params {
  _event: FollowModuleWhitelisted;

  constructor(event: FollowModuleWhitelisted) {
    this._event = event;
  }

  get followModule(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FollowNFTDelegatedPowerChanged extends ethereum.Event {
  get params(): FollowNFTDelegatedPowerChanged__Params {
    return new FollowNFTDelegatedPowerChanged__Params(this);
  }
}

export class FollowNFTDelegatedPowerChanged__Params {
  _event: FollowNFTDelegatedPowerChanged;

  constructor(event: FollowNFTDelegatedPowerChanged) {
    this._event = event;
  }

  get delegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPower(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FollowNFTDeployed extends ethereum.Event {
  get params(): FollowNFTDeployed__Params {
    return new FollowNFTDeployed__Params(this);
  }
}

export class FollowNFTDeployed__Params {
  _event: FollowNFTDeployed;

  constructor(event: FollowNFTDeployed) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followNFT(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FollowNFTInitialized extends ethereum.Event {
  get params(): FollowNFTInitialized__Params {
    return new FollowNFTInitialized__Params(this);
  }
}

export class FollowNFTInitialized__Params {
  _event: FollowNFTInitialized;

  constructor(event: FollowNFTInitialized) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FollowNFTTransferred1 extends ethereum.Event {
  get params(): FollowNFTTransferred1__Params {
    return new FollowNFTTransferred1__Params(this);
  }
}

export class FollowNFTTransferred1__Params {
  _event: FollowNFTTransferred1;

  constructor(event: FollowNFTTransferred1) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followNFTId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class FollowNFTURISet extends ethereum.Event {
  get params(): FollowNFTURISet__Params {
    return new FollowNFTURISet__Params(this);
  }
}

export class FollowNFTURISet__Params {
  _event: FollowNFTURISet;

  constructor(event: FollowNFTURISet) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followNFTURI(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Followed extends ethereum.Event {
  get params(): Followed__Params {
    return new Followed__Params(this);
  }
}

export class Followed__Params {
  _event: Followed;

  constructor(event: Followed) {
    this._event = event;
  }

  get follower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get followModuleDatas(): Array<Bytes> {
    return this._event.parameters[2].value.toBytesArray();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FollowsApproved extends ethereum.Event {
  get params(): FollowsApproved__Params {
    return new FollowsApproved__Params(this);
  }
}

export class FollowsApproved__Params {
  _event: FollowsApproved;

  constructor(event: FollowsApproved) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get addresses(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get approved(): Array<boolean> {
    return this._event.parameters[3].value.toBooleanArray();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class GovernanceSet extends ethereum.Event {
  get params(): GovernanceSet__Params {
    return new GovernanceSet__Params(this);
  }
}

export class GovernanceSet__Params {
  _event: GovernanceSet;

  constructor(event: GovernanceSet) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevGovernance(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newGovernance(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class MirrorCreated extends ethereum.Event {
  get params(): MirrorCreated__Params {
    return new MirrorCreated__Params(this);
  }
}

export class MirrorCreated__Params {
  _event: MirrorCreated;

  constructor(event: MirrorCreated) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get profileIdPointed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get referenceModuleData(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get referenceModule(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get referenceModuleReturnData(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class ModuleBaseConstructed extends ethereum.Event {
  get params(): ModuleBaseConstructed__Params {
    return new ModuleBaseConstructed__Params(this);
  }
}

export class ModuleBaseConstructed__Params {
  _event: ModuleBaseConstructed;

  constructor(event: ModuleBaseConstructed) {
    this._event = event;
  }

  get hub(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ModuleGlobalsCurrencyWhitelisted extends ethereum.Event {
  get params(): ModuleGlobalsCurrencyWhitelisted__Params {
    return new ModuleGlobalsCurrencyWhitelisted__Params(this);
  }
}

export class ModuleGlobalsCurrencyWhitelisted__Params {
  _event: ModuleGlobalsCurrencyWhitelisted;

  constructor(event: ModuleGlobalsCurrencyWhitelisted) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevWhitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get whitelisted(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ModuleGlobalsGovernanceSet extends ethereum.Event {
  get params(): ModuleGlobalsGovernanceSet__Params {
    return new ModuleGlobalsGovernanceSet__Params(this);
  }
}

export class ModuleGlobalsGovernanceSet__Params {
  _event: ModuleGlobalsGovernanceSet;

  constructor(event: ModuleGlobalsGovernanceSet) {
    this._event = event;
  }

  get prevGovernance(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newGovernance(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ModuleGlobalsTreasuryFeeSet extends ethereum.Event {
  get params(): ModuleGlobalsTreasuryFeeSet__Params {
    return new ModuleGlobalsTreasuryFeeSet__Params(this);
  }
}

export class ModuleGlobalsTreasuryFeeSet__Params {
  _event: ModuleGlobalsTreasuryFeeSet;

  constructor(event: ModuleGlobalsTreasuryFeeSet) {
    this._event = event;
  }

  get prevTreasuryFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newTreasuryFee(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ModuleGlobalsTreasurySet extends ethereum.Event {
  get params(): ModuleGlobalsTreasurySet__Params {
    return new ModuleGlobalsTreasurySet__Params(this);
  }
}

export class ModuleGlobalsTreasurySet__Params {
  _event: ModuleGlobalsTreasurySet;

  constructor(event: ModuleGlobalsTreasurySet) {
    this._event = event;
  }

  get prevTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTreasury(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PostCreated extends ethereum.Event {
  get params(): PostCreated__Params {
    return new PostCreated__Params(this);
  }
}

export class PostCreated__Params {
  _event: PostCreated;

  constructor(event: PostCreated) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get contentURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get collectModule(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get collectModuleReturnData(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get referenceModule(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get referenceModuleReturnData(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class ProfileCreated extends ethereum.Event {
  get params(): ProfileCreated__Params {
    return new ProfileCreated__Params(this);
  }
}

export class ProfileCreated__Params {
  _event: ProfileCreated;

  constructor(event: ProfileCreated) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get handle(): string {
    return this._event.parameters[3].value.toString();
  }

  get imageURI(): string {
    return this._event.parameters[4].value.toString();
  }

  get followModule(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get followModuleReturnData(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get followNFTURI(): string {
    return this._event.parameters[7].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProfileCreatorWhitelisted extends ethereum.Event {
  get params(): ProfileCreatorWhitelisted__Params {
    return new ProfileCreatorWhitelisted__Params(this);
  }
}

export class ProfileCreatorWhitelisted__Params {
  _event: ProfileCreatorWhitelisted;

  constructor(event: ProfileCreatorWhitelisted) {
    this._event = event;
  }

  get profileCreator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProfileImageURISet extends ethereum.Event {
  get params(): ProfileImageURISet__Params {
    return new ProfileImageURISet__Params(this);
  }
}

export class ProfileImageURISet__Params {
  _event: ProfileImageURISet;

  constructor(event: ProfileImageURISet) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get imageURI(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReferenceModuleWhitelisted extends ethereum.Event {
  get params(): ReferenceModuleWhitelisted__Params {
    return new ReferenceModuleWhitelisted__Params(this);
  }
}

export class ReferenceModuleWhitelisted__Params {
  _event: ReferenceModuleWhitelisted;

  constructor(event: ReferenceModuleWhitelisted) {
    this._event = event;
  }

  get referenceModule(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StateSet extends ethereum.Event {
  get params(): StateSet__Params {
    return new StateSet__Params(this);
  }
}

export class StateSet__Params {
  _event: StateSet;

  constructor(event: StateSet) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevState(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get newState(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Token__getProfileResultValue0Struct extends ethereum.Tuple {
  get pubCount(): BigInt {
    return this[0].toBigInt();
  }

  get followModule(): Address {
    return this[1].toAddress();
  }

  get followNFT(): Address {
    return this[2].toAddress();
  }

  get handle(): string {
    return this[3].toString();
  }

  get imageURI(): string {
    return this[4].toString();
  }

  get followNFTURI(): string {
    return this[5].toString();
  }
}

export class Token__getPubResultValue0Struct extends ethereum.Tuple {
  get profileIdPointed(): BigInt {
    return this[0].toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this[1].toBigInt();
  }

  get contentURI(): string {
    return this[2].toString();
  }

  get referenceModule(): Address {
    return this[3].toAddress();
  }

  get collectModule(): Address {
    return this[4].toAddress();
  }

  get collectNFT(): Address {
    return this[5].toAddress();
  }
}

export class Token__getPubPointerResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Token__tokenDataOfResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get mintTimestamp(): BigInt {
    return this[1].toBigInt();
  }
}

export class Token extends ethereum.SmartContract {
  static bind(address: Address): Token {
    return new Token("Token", address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectModule(profileId: BigInt, pubId: BigInt): Address {
    let result = super.call(
      "getCollectModule",
      "getCollectModule(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return result[0].toAddress();
  }

  try_getCollectModule(
    profileId: BigInt,
    pubId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCollectModule",
      "getCollectModule(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectNFT(profileId: BigInt, pubId: BigInt): Address {
    let result = super.call(
      "getCollectNFT",
      "getCollectNFT(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return result[0].toAddress();
  }

  try_getCollectNFT(
    profileId: BigInt,
    pubId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCollectNFT",
      "getCollectNFT(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getContentURI(profileId: BigInt, pubId: BigInt): string {
    let result = super.call(
      "getContentURI",
      "getContentURI(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return result[0].toString();
  }

  try_getContentURI(
    profileId: BigInt,
    pubId: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getContentURI",
      "getContentURI(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getDispatcher(profileId: BigInt): Address {
    let result = super.call(
      "getDispatcher",
      "getDispatcher(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return result[0].toAddress();
  }

  try_getDispatcher(profileId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDispatcher",
      "getDispatcher(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDomainSeparator(): Bytes {
    let result = super.call(
      "getDomainSeparator",
      "getDomainSeparator():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getDomainSeparator(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getDomainSeparator",
      "getDomainSeparator():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getFollowModule(profileId: BigInt): Address {
    let result = super.call(
      "getFollowModule",
      "getFollowModule(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return result[0].toAddress();
  }

  try_getFollowModule(profileId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFollowModule",
      "getFollowModule(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFollowNFT(profileId: BigInt): Address {
    let result = super.call("getFollowNFT", "getFollowNFT(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(profileId)
    ]);

    return result[0].toAddress();
  }

  try_getFollowNFT(profileId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFollowNFT",
      "getFollowNFT(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFollowNFTURI(profileId: BigInt): string {
    let result = super.call(
      "getFollowNFTURI",
      "getFollowNFTURI(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return result[0].toString();
  }

  try_getFollowNFTURI(profileId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getFollowNFTURI",
      "getFollowNFTURI(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getGovernance(): Address {
    let result = super.call("getGovernance", "getGovernance():(address)", []);

    return result[0].toAddress();
  }

  try_getGovernance(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getGovernance",
      "getGovernance():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getHandle(profileId: BigInt): string {
    let result = super.call("getHandle", "getHandle(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(profileId)
    ]);

    return result[0].toString();
  }

  try_getHandle(profileId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getHandle", "getHandle(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(profileId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getProfile(profileId: BigInt): Token__getProfileResultValue0Struct {
    let result = super.call(
      "getProfile",
      "getProfile(uint256):((uint256,address,address,string,string,string))",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return changetype<Token__getProfileResultValue0Struct>(result[0].toTuple());
  }

  try_getProfile(
    profileId: BigInt
  ): ethereum.CallResult<Token__getProfileResultValue0Struct> {
    let result = super.tryCall(
      "getProfile",
      "getProfile(uint256):((uint256,address,address,string,string,string))",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Token__getProfileResultValue0Struct>(value[0].toTuple())
    );
  }

  getProfileIdByHandle(handle: string): BigInt {
    let result = super.call(
      "getProfileIdByHandle",
      "getProfileIdByHandle(string):(uint256)",
      [ethereum.Value.fromString(handle)]
    );

    return result[0].toBigInt();
  }

  try_getProfileIdByHandle(handle: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProfileIdByHandle",
      "getProfileIdByHandle(string):(uint256)",
      [ethereum.Value.fromString(handle)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPub(profileId: BigInt, pubId: BigInt): Token__getPubResultValue0Struct {
    let result = super.call(
      "getPub",
      "getPub(uint256,uint256):((uint256,uint256,string,address,address,address))",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return changetype<Token__getPubResultValue0Struct>(result[0].toTuple());
  }

  try_getPub(
    profileId: BigInt,
    pubId: BigInt
  ): ethereum.CallResult<Token__getPubResultValue0Struct> {
    let result = super.tryCall(
      "getPub",
      "getPub(uint256,uint256):((uint256,uint256,string,address,address,address))",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Token__getPubResultValue0Struct>(value[0].toTuple())
    );
  }

  getPubCount(profileId: BigInt): BigInt {
    let result = super.call("getPubCount", "getPubCount(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(profileId)
    ]);

    return result[0].toBigInt();
  }

  try_getPubCount(profileId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPubCount",
      "getPubCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPubPointer(profileId: BigInt, pubId: BigInt): Token__getPubPointerResult {
    let result = super.call(
      "getPubPointer",
      "getPubPointer(uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return new Token__getPubPointerResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPubPointer(
    profileId: BigInt,
    pubId: BigInt
  ): ethereum.CallResult<Token__getPubPointerResult> {
    let result = super.tryCall(
      "getPubPointer",
      "getPubPointer(uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Token__getPubPointerResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getPubType(profileId: BigInt, pubId: BigInt): i32 {
    let result = super.call(
      "getPubType",
      "getPubType(uint256,uint256):(uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return result[0].toI32();
  }

  try_getPubType(profileId: BigInt, pubId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getPubType",
      "getPubType(uint256,uint256):(uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getReferenceModule(profileId: BigInt, pubId: BigInt): Address {
    let result = super.call(
      "getReferenceModule",
      "getReferenceModule(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );

    return result[0].toAddress();
  }

  try_getReferenceModule(
    profileId: BigInt,
    pubId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getReferenceModule",
      "getReferenceModule(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(pubId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getState(): i32 {
    let result = super.call("getState", "getState():(uint8)", []);

    return result[0].toI32();
  }

  try_getState(): ethereum.CallResult<i32> {
    let result = super.tryCall("getState", "getState():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isCollectModuleWhitelisted(collectModule: Address): boolean {
    let result = super.call(
      "isCollectModuleWhitelisted",
      "isCollectModuleWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(collectModule)]
    );

    return result[0].toBoolean();
  }

  try_isCollectModuleWhitelisted(
    collectModule: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isCollectModuleWhitelisted",
      "isCollectModuleWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(collectModule)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isFollowModuleWhitelisted(followModule: Address): boolean {
    let result = super.call(
      "isFollowModuleWhitelisted",
      "isFollowModuleWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(followModule)]
    );

    return result[0].toBoolean();
  }

  try_isFollowModuleWhitelisted(
    followModule: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isFollowModuleWhitelisted",
      "isFollowModuleWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(followModule)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isProfileCreatorWhitelisted(profileCreator: Address): boolean {
    let result = super.call(
      "isProfileCreatorWhitelisted",
      "isProfileCreatorWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(profileCreator)]
    );

    return result[0].toBoolean();
  }

  try_isProfileCreatorWhitelisted(
    profileCreator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isProfileCreatorWhitelisted",
      "isProfileCreatorWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(profileCreator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isReferenceModuleWhitelisted(referenceModule: Address): boolean {
    let result = super.call(
      "isReferenceModuleWhitelisted",
      "isReferenceModuleWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(referenceModule)]
    );

    return result[0].toBoolean();
  }

  try_isReferenceModuleWhitelisted(
    referenceModule: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isReferenceModuleWhitelisted",
      "isReferenceModuleWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(referenceModule)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintTimestampOf(tokenId: BigInt): BigInt {
    let result = super.call(
      "mintTimestampOf",
      "mintTimestampOf(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_mintTimestampOf(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintTimestampOf",
      "mintTimestampOf(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sigNonces(param0: Address): BigInt {
    let result = super.call("sigNonces", "sigNonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_sigNonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("sigNonces", "sigNonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenDataOf(tokenId: BigInt): Token__tokenDataOfResultValue0Struct {
    let result = super.call(
      "tokenDataOf",
      "tokenDataOf(uint256):((address,uint96))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return changetype<Token__tokenDataOfResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_tokenDataOf(
    tokenId: BigInt
  ): ethereum.CallResult<Token__tokenDataOfResultValue0Struct> {
    let result = super.tryCall(
      "tokenDataOf",
      "tokenDataOf(uint256):((address,uint96))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Token__tokenDataOfResultValue0Struct>(value[0].toTuple())
    );
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get followNFTImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collectNFTImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class BurnWithSigCall extends ethereum.Call {
  get inputs(): BurnWithSigCall__Inputs {
    return new BurnWithSigCall__Inputs(this);
  }

  get outputs(): BurnWithSigCall__Outputs {
    return new BurnWithSigCall__Outputs(this);
  }
}

export class BurnWithSigCall__Inputs {
  _call: BurnWithSigCall;

  constructor(call: BurnWithSigCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sig(): BurnWithSigCallSigStruct {
    return changetype<BurnWithSigCallSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class BurnWithSigCall__Outputs {
  _call: BurnWithSigCall;

  constructor(call: BurnWithSigCall) {
    this._call = call;
  }
}

export class BurnWithSigCallSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class CollectCall extends ethereum.Call {
  get inputs(): CollectCall__Inputs {
    return new CollectCall__Inputs(this);
  }

  get outputs(): CollectCall__Outputs {
    return new CollectCall__Outputs(this);
  }
}

export class CollectCall__Inputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CollectCall__Outputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }
}

export class CollectWithSigCall extends ethereum.Call {
  get inputs(): CollectWithSigCall__Inputs {
    return new CollectWithSigCall__Inputs(this);
  }

  get outputs(): CollectWithSigCall__Outputs {
    return new CollectWithSigCall__Outputs(this);
  }
}

export class CollectWithSigCall__Inputs {
  _call: CollectWithSigCall;

  constructor(call: CollectWithSigCall) {
    this._call = call;
  }

  get vars(): CollectWithSigCallVarsStruct {
    return changetype<CollectWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CollectWithSigCall__Outputs {
  _call: CollectWithSigCall;

  constructor(call: CollectWithSigCall) {
    this._call = call;
  }
}

export class CollectWithSigCallVarsStruct extends ethereum.Tuple {
  get collector(): Address {
    return this[0].toAddress();
  }

  get profileId(): BigInt {
    return this[1].toBigInt();
  }

  get pubId(): BigInt {
    return this[2].toBigInt();
  }

  get data(): Bytes {
    return this[3].toBytes();
  }

  get sig(): CollectWithSigCallVarsSigStruct {
    return changetype<CollectWithSigCallVarsSigStruct>(this[4].toTuple());
  }
}

export class CollectWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class CommentCall extends ethereum.Call {
  get inputs(): CommentCall__Inputs {
    return new CommentCall__Inputs(this);
  }

  get outputs(): CommentCall__Outputs {
    return new CommentCall__Outputs(this);
  }
}

export class CommentCall__Inputs {
  _call: CommentCall;

  constructor(call: CommentCall) {
    this._call = call;
  }

  get vars(): CommentCallVarsStruct {
    return changetype<CommentCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CommentCall__Outputs {
  _call: CommentCall;

  constructor(call: CommentCall) {
    this._call = call;
  }
}

export class CommentCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get contentURI(): string {
    return this[1].toString();
  }

  get profileIdPointed(): BigInt {
    return this[2].toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this[3].toBigInt();
  }

  get collectModule(): Address {
    return this[4].toAddress();
  }

  get collectModuleData(): Bytes {
    return this[5].toBytes();
  }

  get referenceModule(): Address {
    return this[6].toAddress();
  }

  get referenceModuleData(): Bytes {
    return this[7].toBytes();
  }
}

export class CommentWithSigCall extends ethereum.Call {
  get inputs(): CommentWithSigCall__Inputs {
    return new CommentWithSigCall__Inputs(this);
  }

  get outputs(): CommentWithSigCall__Outputs {
    return new CommentWithSigCall__Outputs(this);
  }
}

export class CommentWithSigCall__Inputs {
  _call: CommentWithSigCall;

  constructor(call: CommentWithSigCall) {
    this._call = call;
  }

  get vars(): CommentWithSigCallVarsStruct {
    return changetype<CommentWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CommentWithSigCall__Outputs {
  _call: CommentWithSigCall;

  constructor(call: CommentWithSigCall) {
    this._call = call;
  }
}

export class CommentWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get contentURI(): string {
    return this[1].toString();
  }

  get profileIdPointed(): BigInt {
    return this[2].toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this[3].toBigInt();
  }

  get collectModule(): Address {
    return this[4].toAddress();
  }

  get collectModuleData(): Bytes {
    return this[5].toBytes();
  }

  get referenceModule(): Address {
    return this[6].toAddress();
  }

  get referenceModuleData(): Bytes {
    return this[7].toBytes();
  }

  get sig(): CommentWithSigCallVarsSigStruct {
    return changetype<CommentWithSigCallVarsSigStruct>(this[8].toTuple());
  }
}

export class CommentWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class CreateProfileCall extends ethereum.Call {
  get inputs(): CreateProfileCall__Inputs {
    return new CreateProfileCall__Inputs(this);
  }

  get outputs(): CreateProfileCall__Outputs {
    return new CreateProfileCall__Outputs(this);
  }
}

export class CreateProfileCall__Inputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get vars(): CreateProfileCallVarsStruct {
    return changetype<CreateProfileCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateProfileCall__Outputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }
}

export class CreateProfileCallVarsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get handle(): string {
    return this[1].toString();
  }

  get imageURI(): string {
    return this[2].toString();
  }

  get followModule(): Address {
    return this[3].toAddress();
  }

  get followModuleData(): Bytes {
    return this[4].toBytes();
  }

  get followNFTURI(): string {
    return this[5].toString();
  }
}

export class EmitCollectNFTTransferEventCall extends ethereum.Call {
  get inputs(): EmitCollectNFTTransferEventCall__Inputs {
    return new EmitCollectNFTTransferEventCall__Inputs(this);
  }

  get outputs(): EmitCollectNFTTransferEventCall__Outputs {
    return new EmitCollectNFTTransferEventCall__Outputs(this);
  }
}

export class EmitCollectNFTTransferEventCall__Inputs {
  _call: EmitCollectNFTTransferEventCall;

  constructor(call: EmitCollectNFTTransferEventCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get collectNFTId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get from(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class EmitCollectNFTTransferEventCall__Outputs {
  _call: EmitCollectNFTTransferEventCall;

  constructor(call: EmitCollectNFTTransferEventCall) {
    this._call = call;
  }
}

export class EmitFollowNFTTransferEventCall extends ethereum.Call {
  get inputs(): EmitFollowNFTTransferEventCall__Inputs {
    return new EmitFollowNFTTransferEventCall__Inputs(this);
  }

  get outputs(): EmitFollowNFTTransferEventCall__Outputs {
    return new EmitFollowNFTTransferEventCall__Outputs(this);
  }
}

export class EmitFollowNFTTransferEventCall__Inputs {
  _call: EmitFollowNFTTransferEventCall;

  constructor(call: EmitFollowNFTTransferEventCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get followNFTId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get from(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class EmitFollowNFTTransferEventCall__Outputs {
  _call: EmitFollowNFTTransferEventCall;

  constructor(call: EmitFollowNFTTransferEventCall) {
    this._call = call;
  }
}

export class FollowCall extends ethereum.Call {
  get inputs(): FollowCall__Inputs {
    return new FollowCall__Inputs(this);
  }

  get outputs(): FollowCall__Outputs {
    return new FollowCall__Outputs(this);
  }
}

export class FollowCall__Inputs {
  _call: FollowCall;

  constructor(call: FollowCall) {
    this._call = call;
  }

  get profileIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get datas(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class FollowCall__Outputs {
  _call: FollowCall;

  constructor(call: FollowCall) {
    this._call = call;
  }
}

export class FollowWithSigCall extends ethereum.Call {
  get inputs(): FollowWithSigCall__Inputs {
    return new FollowWithSigCall__Inputs(this);
  }

  get outputs(): FollowWithSigCall__Outputs {
    return new FollowWithSigCall__Outputs(this);
  }
}

export class FollowWithSigCall__Inputs {
  _call: FollowWithSigCall;

  constructor(call: FollowWithSigCall) {
    this._call = call;
  }

  get vars(): FollowWithSigCallVarsStruct {
    return changetype<FollowWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class FollowWithSigCall__Outputs {
  _call: FollowWithSigCall;

  constructor(call: FollowWithSigCall) {
    this._call = call;
  }
}

export class FollowWithSigCallVarsStruct extends ethereum.Tuple {
  get follower(): Address {
    return this[0].toAddress();
  }

  get profileIds(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get datas(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get sig(): FollowWithSigCallVarsSigStruct {
    return changetype<FollowWithSigCallVarsSigStruct>(this[3].toTuple());
  }
}

export class FollowWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get newGovernance(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MirrorCall extends ethereum.Call {
  get inputs(): MirrorCall__Inputs {
    return new MirrorCall__Inputs(this);
  }

  get outputs(): MirrorCall__Outputs {
    return new MirrorCall__Outputs(this);
  }
}

export class MirrorCall__Inputs {
  _call: MirrorCall;

  constructor(call: MirrorCall) {
    this._call = call;
  }

  get vars(): MirrorCallVarsStruct {
    return changetype<MirrorCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class MirrorCall__Outputs {
  _call: MirrorCall;

  constructor(call: MirrorCall) {
    this._call = call;
  }
}

export class MirrorCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get profileIdPointed(): BigInt {
    return this[1].toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this[2].toBigInt();
  }

  get referenceModule(): Address {
    return this[3].toAddress();
  }

  get referenceModuleData(): Bytes {
    return this[4].toBytes();
  }
}

export class MirrorWithSigCall extends ethereum.Call {
  get inputs(): MirrorWithSigCall__Inputs {
    return new MirrorWithSigCall__Inputs(this);
  }

  get outputs(): MirrorWithSigCall__Outputs {
    return new MirrorWithSigCall__Outputs(this);
  }
}

export class MirrorWithSigCall__Inputs {
  _call: MirrorWithSigCall;

  constructor(call: MirrorWithSigCall) {
    this._call = call;
  }

  get vars(): MirrorWithSigCallVarsStruct {
    return changetype<MirrorWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class MirrorWithSigCall__Outputs {
  _call: MirrorWithSigCall;

  constructor(call: MirrorWithSigCall) {
    this._call = call;
  }
}

export class MirrorWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get profileIdPointed(): BigInt {
    return this[1].toBigInt();
  }

  get pubIdPointed(): BigInt {
    return this[2].toBigInt();
  }

  get referenceModule(): Address {
    return this[3].toAddress();
  }

  get referenceModuleData(): Bytes {
    return this[4].toBytes();
  }

  get sig(): MirrorWithSigCallVarsSigStruct {
    return changetype<MirrorWithSigCallVarsSigStruct>(this[5].toTuple());
  }
}

export class MirrorWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sig(): PermitCallSigStruct {
    return changetype<PermitCallSigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class PermitCallSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class PermitForAllCall extends ethereum.Call {
  get inputs(): PermitForAllCall__Inputs {
    return new PermitForAllCall__Inputs(this);
  }

  get outputs(): PermitForAllCall__Outputs {
    return new PermitForAllCall__Outputs(this);
  }
}

export class PermitForAllCall__Inputs {
  _call: PermitForAllCall;

  constructor(call: PermitForAllCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get operator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get sig(): PermitForAllCallSigStruct {
    return changetype<PermitForAllCallSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class PermitForAllCall__Outputs {
  _call: PermitForAllCall;

  constructor(call: PermitForAllCall) {
    this._call = call;
  }
}

export class PermitForAllCallSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class PostCall extends ethereum.Call {
  get inputs(): PostCall__Inputs {
    return new PostCall__Inputs(this);
  }

  get outputs(): PostCall__Outputs {
    return new PostCall__Outputs(this);
  }
}

export class PostCall__Inputs {
  _call: PostCall;

  constructor(call: PostCall) {
    this._call = call;
  }

  get vars(): PostCallVarsStruct {
    return changetype<PostCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class PostCall__Outputs {
  _call: PostCall;

  constructor(call: PostCall) {
    this._call = call;
  }
}

export class PostCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get contentURI(): string {
    return this[1].toString();
  }

  get collectModule(): Address {
    return this[2].toAddress();
  }

  get collectModuleData(): Bytes {
    return this[3].toBytes();
  }

  get referenceModule(): Address {
    return this[4].toAddress();
  }

  get referenceModuleData(): Bytes {
    return this[5].toBytes();
  }
}

export class PostWithSigCall extends ethereum.Call {
  get inputs(): PostWithSigCall__Inputs {
    return new PostWithSigCall__Inputs(this);
  }

  get outputs(): PostWithSigCall__Outputs {
    return new PostWithSigCall__Outputs(this);
  }
}

export class PostWithSigCall__Inputs {
  _call: PostWithSigCall;

  constructor(call: PostWithSigCall) {
    this._call = call;
  }

  get vars(): PostWithSigCallVarsStruct {
    return changetype<PostWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class PostWithSigCall__Outputs {
  _call: PostWithSigCall;

  constructor(call: PostWithSigCall) {
    this._call = call;
  }
}

export class PostWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get contentURI(): string {
    return this[1].toString();
  }

  get collectModule(): Address {
    return this[2].toAddress();
  }

  get collectModuleData(): Bytes {
    return this[3].toBytes();
  }

  get referenceModule(): Address {
    return this[4].toAddress();
  }

  get referenceModuleData(): Bytes {
    return this[5].toBytes();
  }

  get sig(): PostWithSigCallVarsSigStruct {
    return changetype<PostWithSigCallVarsSigStruct>(this[6].toTuple());
  }
}

export class PostWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetDispatcherCall extends ethereum.Call {
  get inputs(): SetDispatcherCall__Inputs {
    return new SetDispatcherCall__Inputs(this);
  }

  get outputs(): SetDispatcherCall__Outputs {
    return new SetDispatcherCall__Outputs(this);
  }
}

export class SetDispatcherCall__Inputs {
  _call: SetDispatcherCall;

  constructor(call: SetDispatcherCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get dispatcher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetDispatcherCall__Outputs {
  _call: SetDispatcherCall;

  constructor(call: SetDispatcherCall) {
    this._call = call;
  }
}

export class SetDispatcherWithSigCall extends ethereum.Call {
  get inputs(): SetDispatcherWithSigCall__Inputs {
    return new SetDispatcherWithSigCall__Inputs(this);
  }

  get outputs(): SetDispatcherWithSigCall__Outputs {
    return new SetDispatcherWithSigCall__Outputs(this);
  }
}

export class SetDispatcherWithSigCall__Inputs {
  _call: SetDispatcherWithSigCall;

  constructor(call: SetDispatcherWithSigCall) {
    this._call = call;
  }

  get vars(): SetDispatcherWithSigCallVarsStruct {
    return changetype<SetDispatcherWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetDispatcherWithSigCall__Outputs {
  _call: SetDispatcherWithSigCall;

  constructor(call: SetDispatcherWithSigCall) {
    this._call = call;
  }
}

export class SetDispatcherWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get dispatcher(): Address {
    return this[1].toAddress();
  }

  get sig(): SetDispatcherWithSigCallVarsSigStruct {
    return changetype<SetDispatcherWithSigCallVarsSigStruct>(this[2].toTuple());
  }
}

export class SetDispatcherWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class SetEmergencyAdminCall extends ethereum.Call {
  get inputs(): SetEmergencyAdminCall__Inputs {
    return new SetEmergencyAdminCall__Inputs(this);
  }

  get outputs(): SetEmergencyAdminCall__Outputs {
    return new SetEmergencyAdminCall__Outputs(this);
  }
}

export class SetEmergencyAdminCall__Inputs {
  _call: SetEmergencyAdminCall;

  constructor(call: SetEmergencyAdminCall) {
    this._call = call;
  }

  get newEmergencyAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetEmergencyAdminCall__Outputs {
  _call: SetEmergencyAdminCall;

  constructor(call: SetEmergencyAdminCall) {
    this._call = call;
  }
}

export class SetFollowModuleCall extends ethereum.Call {
  get inputs(): SetFollowModuleCall__Inputs {
    return new SetFollowModuleCall__Inputs(this);
  }

  get outputs(): SetFollowModuleCall__Outputs {
    return new SetFollowModuleCall__Outputs(this);
  }
}

export class SetFollowModuleCall__Inputs {
  _call: SetFollowModuleCall;

  constructor(call: SetFollowModuleCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get followModule(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get followModuleData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SetFollowModuleCall__Outputs {
  _call: SetFollowModuleCall;

  constructor(call: SetFollowModuleCall) {
    this._call = call;
  }
}

export class SetFollowModuleWithSigCall extends ethereum.Call {
  get inputs(): SetFollowModuleWithSigCall__Inputs {
    return new SetFollowModuleWithSigCall__Inputs(this);
  }

  get outputs(): SetFollowModuleWithSigCall__Outputs {
    return new SetFollowModuleWithSigCall__Outputs(this);
  }
}

export class SetFollowModuleWithSigCall__Inputs {
  _call: SetFollowModuleWithSigCall;

  constructor(call: SetFollowModuleWithSigCall) {
    this._call = call;
  }

  get vars(): SetFollowModuleWithSigCallVarsStruct {
    return changetype<SetFollowModuleWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetFollowModuleWithSigCall__Outputs {
  _call: SetFollowModuleWithSigCall;

  constructor(call: SetFollowModuleWithSigCall) {
    this._call = call;
  }
}

export class SetFollowModuleWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get followModule(): Address {
    return this[1].toAddress();
  }

  get followModuleData(): Bytes {
    return this[2].toBytes();
  }

  get sig(): SetFollowModuleWithSigCallVarsSigStruct {
    return changetype<SetFollowModuleWithSigCallVarsSigStruct>(
      this[3].toTuple()
    );
  }
}

export class SetFollowModuleWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class SetFollowNFTURICall extends ethereum.Call {
  get inputs(): SetFollowNFTURICall__Inputs {
    return new SetFollowNFTURICall__Inputs(this);
  }

  get outputs(): SetFollowNFTURICall__Outputs {
    return new SetFollowNFTURICall__Outputs(this);
  }
}

export class SetFollowNFTURICall__Inputs {
  _call: SetFollowNFTURICall;

  constructor(call: SetFollowNFTURICall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get followNFTURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetFollowNFTURICall__Outputs {
  _call: SetFollowNFTURICall;

  constructor(call: SetFollowNFTURICall) {
    this._call = call;
  }
}

export class SetFollowNFTURIWithSigCall extends ethereum.Call {
  get inputs(): SetFollowNFTURIWithSigCall__Inputs {
    return new SetFollowNFTURIWithSigCall__Inputs(this);
  }

  get outputs(): SetFollowNFTURIWithSigCall__Outputs {
    return new SetFollowNFTURIWithSigCall__Outputs(this);
  }
}

export class SetFollowNFTURIWithSigCall__Inputs {
  _call: SetFollowNFTURIWithSigCall;

  constructor(call: SetFollowNFTURIWithSigCall) {
    this._call = call;
  }

  get vars(): SetFollowNFTURIWithSigCallVarsStruct {
    return changetype<SetFollowNFTURIWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetFollowNFTURIWithSigCall__Outputs {
  _call: SetFollowNFTURIWithSigCall;

  constructor(call: SetFollowNFTURIWithSigCall) {
    this._call = call;
  }
}

export class SetFollowNFTURIWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get followNFTURI(): string {
    return this[1].toString();
  }

  get sig(): SetFollowNFTURIWithSigCallVarsSigStruct {
    return changetype<SetFollowNFTURIWithSigCallVarsSigStruct>(
      this[2].toTuple()
    );
  }
}

export class SetFollowNFTURIWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class SetGovernanceCall extends ethereum.Call {
  get inputs(): SetGovernanceCall__Inputs {
    return new SetGovernanceCall__Inputs(this);
  }

  get outputs(): SetGovernanceCall__Outputs {
    return new SetGovernanceCall__Outputs(this);
  }
}

export class SetGovernanceCall__Inputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }

  get newGovernance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceCall__Outputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }
}

export class SetProfileImageURICall extends ethereum.Call {
  get inputs(): SetProfileImageURICall__Inputs {
    return new SetProfileImageURICall__Inputs(this);
  }

  get outputs(): SetProfileImageURICall__Outputs {
    return new SetProfileImageURICall__Outputs(this);
  }
}

export class SetProfileImageURICall__Inputs {
  _call: SetProfileImageURICall;

  constructor(call: SetProfileImageURICall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get imageURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetProfileImageURICall__Outputs {
  _call: SetProfileImageURICall;

  constructor(call: SetProfileImageURICall) {
    this._call = call;
  }
}

export class SetProfileImageURIWithSigCall extends ethereum.Call {
  get inputs(): SetProfileImageURIWithSigCall__Inputs {
    return new SetProfileImageURIWithSigCall__Inputs(this);
  }

  get outputs(): SetProfileImageURIWithSigCall__Outputs {
    return new SetProfileImageURIWithSigCall__Outputs(this);
  }
}

export class SetProfileImageURIWithSigCall__Inputs {
  _call: SetProfileImageURIWithSigCall;

  constructor(call: SetProfileImageURIWithSigCall) {
    this._call = call;
  }

  get vars(): SetProfileImageURIWithSigCallVarsStruct {
    return changetype<SetProfileImageURIWithSigCallVarsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetProfileImageURIWithSigCall__Outputs {
  _call: SetProfileImageURIWithSigCall;

  constructor(call: SetProfileImageURIWithSigCall) {
    this._call = call;
  }
}

export class SetProfileImageURIWithSigCallVarsStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get imageURI(): string {
    return this[1].toString();
  }

  get sig(): SetProfileImageURIWithSigCallVarsSigStruct {
    return changetype<SetProfileImageURIWithSigCallVarsSigStruct>(
      this[2].toTuple()
    );
  }
}

export class SetProfileImageURIWithSigCallVarsSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class SetStateCall extends ethereum.Call {
  get inputs(): SetStateCall__Inputs {
    return new SetStateCall__Inputs(this);
  }

  get outputs(): SetStateCall__Outputs {
    return new SetStateCall__Outputs(this);
  }
}

export class SetStateCall__Inputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }

  get newState(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetStateCall__Outputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class WhitelistCollectModuleCall extends ethereum.Call {
  get inputs(): WhitelistCollectModuleCall__Inputs {
    return new WhitelistCollectModuleCall__Inputs(this);
  }

  get outputs(): WhitelistCollectModuleCall__Outputs {
    return new WhitelistCollectModuleCall__Outputs(this);
  }
}

export class WhitelistCollectModuleCall__Inputs {
  _call: WhitelistCollectModuleCall;

  constructor(call: WhitelistCollectModuleCall) {
    this._call = call;
  }

  get collectModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class WhitelistCollectModuleCall__Outputs {
  _call: WhitelistCollectModuleCall;

  constructor(call: WhitelistCollectModuleCall) {
    this._call = call;
  }
}

export class WhitelistFollowModuleCall extends ethereum.Call {
  get inputs(): WhitelistFollowModuleCall__Inputs {
    return new WhitelistFollowModuleCall__Inputs(this);
  }

  get outputs(): WhitelistFollowModuleCall__Outputs {
    return new WhitelistFollowModuleCall__Outputs(this);
  }
}

export class WhitelistFollowModuleCall__Inputs {
  _call: WhitelistFollowModuleCall;

  constructor(call: WhitelistFollowModuleCall) {
    this._call = call;
  }

  get followModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class WhitelistFollowModuleCall__Outputs {
  _call: WhitelistFollowModuleCall;

  constructor(call: WhitelistFollowModuleCall) {
    this._call = call;
  }
}

export class WhitelistProfileCreatorCall extends ethereum.Call {
  get inputs(): WhitelistProfileCreatorCall__Inputs {
    return new WhitelistProfileCreatorCall__Inputs(this);
  }

  get outputs(): WhitelistProfileCreatorCall__Outputs {
    return new WhitelistProfileCreatorCall__Outputs(this);
  }
}

export class WhitelistProfileCreatorCall__Inputs {
  _call: WhitelistProfileCreatorCall;

  constructor(call: WhitelistProfileCreatorCall) {
    this._call = call;
  }

  get profileCreator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class WhitelistProfileCreatorCall__Outputs {
  _call: WhitelistProfileCreatorCall;

  constructor(call: WhitelistProfileCreatorCall) {
    this._call = call;
  }
}

export class WhitelistReferenceModuleCall extends ethereum.Call {
  get inputs(): WhitelistReferenceModuleCall__Inputs {
    return new WhitelistReferenceModuleCall__Inputs(this);
  }

  get outputs(): WhitelistReferenceModuleCall__Outputs {
    return new WhitelistReferenceModuleCall__Outputs(this);
  }
}

export class WhitelistReferenceModuleCall__Inputs {
  _call: WhitelistReferenceModuleCall;

  constructor(call: WhitelistReferenceModuleCall) {
    this._call = call;
  }

  get referenceModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class WhitelistReferenceModuleCall__Outputs {
  _call: WhitelistReferenceModuleCall;

  constructor(call: WhitelistReferenceModuleCall) {
    this._call = call;
  }
}
